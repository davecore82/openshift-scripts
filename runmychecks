#!/usr/bin/env bash

# Function to log messages
log() {
    echo ""
    echo "#####################################################"
    echo "$1"
    echo "#####################################################"
}

# Function to run commands and handle errors
run_command() {
    local cmd=$1
    log "Running $cmd"
    if ! eval "$cmd"; then
        log "Error executing command: $cmd"
        exit 1
    fi
}

# Check if a command exists in the PATH
command_exists() {
    command -v "$1" &> /dev/null
}

# Ensure omc is available
if ! command_exists omc; then
    echo "Error: omc command not found in PATH"
    exit 1
fi

# Change directory to quay-io
quaydir=$(find . -name "quay-io*")
cd "$quaydir" || { echo "Error: Unable to change directory."; exit 1; }

# omc prep
omc use .

# Run basic OCP insights rules check
insights_command="insights run -p ccx_rules_ocp ."
run_command "$insights_command"

# Extract cluster ID
clusterid=$(yq -r .spec.clusterID < cluster-scoped-resources/config.openshift.io/clusterversions/version.yaml)

# Check latest insights for that cluster
ocp_insights_command="ocp_insights.sh --all --id $clusterid"
run_command "$ocp_insights_command"

# Run etcd diagnostics commands
etcd_commands=(
    "--errors"
    "--ttl"
    "--heartbeat"
    "--election"
    "--fdatasync"
    "--buffer"
)

for cmd in "${etcd_commands[@]}"; do
    etcd_command="etcd-ocp-diag.sh $cmd"
    run_command "$etcd_command"
done

# Additional custom checks
log "Checking SCC's (onlyanyuid should have a priority of 10)"
omc get securitycontextconstraints -A

echo "Run the following command and change the splunk-otel-collector SCC as needed..."
echo 'omc get pods -A -o json | jq -r '\''["Namespace", "Pod"], (.items[] | select(.metadata.annotations."openshift.io/scc" | .!= null and contains("splunk-otel-collector")) | [.metadata.namespace, .metadata.name]) | @tsv'\'' | column -t | grep openshift'

# Run mg_cluster_status if available in PATH
log "Running vlours' mg_cluster_status"
if command_exists mg_cluster_status.sh; then
    mg_cluster_status.sh
else
    log "mg_cluster_status.sh not found in PATH"
fi

